---
# playbook client

# ------------------------------------------------------------------------------
- name: PRE | pre installer (0) | include pre-task playbook
  import_playbook: ./pre-tasks.yml
  vars:
    ansible_user_conf_on_hosts:
      - pre
    ansible_user_conf_name: "{{ ansible_user }}"
    ansible_user_conf_update: "{{ pl_a_user_config.is_update | bool }}"
    ansible_user_conf_shell: "{{ pl_a_user_config.shell | default('/bin/bash') }}"
    ansible_user_conf_password: "{{ pl_a_user_config.password }}"
    ansible_user_conf_group: "{{ pl_a_user_config.group | default('adm,cdrom,sudo') }}"
    ansible_user_conf_system: "{{ pl_a_user_config.system | default('no') | bool }}"
    ansible_user_conf_append: "{{ pl_a_user_config.append | default('yes') | bool }}"
    ansible_user_conf_createhome: "{{ pl_a_user_config.createhome | default('yes') | bool }}"
    ansible_user_conf_home: "{{ pl_a_user_config.home | default('/home/' + ansible_user) }}"
    ansible_user_conf_add_ssh_key: "{{ pl_a_user_config.add_ssh_key | default('yes') | bool }}"
    ansible_user_conf_clients: "{{ pl_a_clients }}"
    ansible_host_conf_hostname: "{{ ansible_host_hostname | default(ansible_hostname) }}"
  when:
    - pl_a_user_setup is defined
    - pl_a_user_setup | bool

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: PRE | pre installer (1) | updater
  remote_user: "{{ ansible_user }}"
  hosts:
    - pre
  roles:
    ### -------------------------
    - role: ansible-updater
      clients: "{{ pl_a_clients }}"
      updater_config:
        set_timezone: true
        set_time_sync: true
        sync_time: true
        set_language: true
        update_upgrade: true
        setup_zfs: true
        setup_unattended: true
      updater_unattended_origins_patterns:
        # - "origin=Ubuntu,archive=${distro_codename}-security,label=Ubuntu"
        # - "origin=Ubuntu,archive=${distro_codename},label=Ubuntu"
        - "origin=Ubuntu,archive=${distro_codename}-security"
        # - "origin=Ubuntu,archive=${distro_codename}"
        - "origin=Ubuntu,archive=${distro_codename}-updates"
        - "origin=Ubuntu,archive=${distro_codename}-proposed-updates"
    ### -------------------------

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: PRE | installer (2) | ssh/netplan/ufw
  remote_user: "{{ ansible_user }}"
  hosts:
    - pre
  vars:
    pl_a_ufw_rules_default:
      - rule: allow
        to_port: 22
        protocol: tcp
        interface: "{{ ansible_default_ipv4['interface'] }}"
        comment: "allow incoming connection on standard ssh port"
  roles:
    ### -------------------------
    - role: ansible-ssh
      clients: "{{ pl_a_clients }}"
      when:
        - pl_a_ssh_setup_enable | bool
    ### -------------------------
    - role: ansible-netplan
      netplan_service_name: "{{ pl_a_service_name }}"
      when:
        - pl_a_netplan_setup is defined
        - pl_a_netplan_setup | bool
    ### -------------------------
  tasks:
    # --------------------------------------------------------------------------
    - name: "PRE | setup ufw | logging"
      become: true
      community.general.ufw:
        logging: "{{ pl_a_ufw_logging_level }}"
      when:
        - pl_a_ufw_setup_enable is defined
        - pl_a_ufw_setup_enable | bool
        - pl_a_ufw_logging_level is defined
    # --------------------------------------------------------------------------
    - name: "PRE | setup ufw | rules"
      become: true
      community.general.ufw:
        rule: "{{ item.rule }}"
        interface: "{{ item.interface | default('') }}"
        direction: "{{ item.direction | default('in') }}"
        from_ip: "{{ item.from_ip | default('any') }}"
        to_ip: "{{ item.to_ip | default('any') }}"
        from_port: "{{ item.from_port | default('') }}"
        to_port: "{{ item.to_port | default('') }}"
        protocol: "{{ item.protocol | default('any') }}"
        route: "{{ item.route | default(omit) }}"
        log: "{{ item.log | default(false) }}"
        comment: "{{ item.comment | default(omit) }}"
      with_items: "{{ pl_a_ufw_rules_default + pl_a_ufw_rules_extended }}"
      when:
        - pl_a_ufw_setup_enable is defined
        - pl_a_ufw_setup_enable | bool
        - pl_a_ufw_rules_extended is defined

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: PRE | installer (2) | mail
  remote_user: "{{ ansible_user }}"
  hosts:
    - pre
  roles:
    ### -------------------------
    - role: ansible-postfix
      become: true
      postfix_hostname: "{{ mailing_mail_username.split('@')[1] }}"
      # postfix_mailname: "{{ mailing_mail_username.split('@')[1] }}"
      postfix_aliases:
        - user: root
          alias: "{{ mailing_mail_username }}"
        - user: "{{ ansible_user }}"
          alias: "{{ mailing_mail_username }}"
      # postfix_header_checks:
      #   - pattern: "/From:.*/"
      #     action: REPLACE
      #     text: "From: {{ mailing_mail_username }}"
      postfix_mydestination:
        - localhost.$myhostname
        - localhost
        - localhost.localdomain
      postfix_inet_interfaces: loopback-only
      postfix_inet_protocols: ipv4
      postfix_relayhost: "{{ mailing_smtp_host }}"
      postfix_relaytls: "{{ mailing_remote_ssl }}"
      postfix_sasl_user: "{{ mailing_mail_username }}"
      postfix_sasl_password: "{{ mailing_mail_password }}"
      postfix_raw_options:
        - |
          sender_canonical_classes = envelope_sender
          mailbox_size_limit = 0
          message_size_limit = 0
          compatibility_level = 2
      when:
        - pl_a_postfix_setup is defined
        - pl_a_postfix_setup | bool
    ### -------------------------
  tasks:
    # --------------------------------------------------------------------------
    - name: "PRE | install nullmailer"
      become: true
      ansible.builtin.apt:
        pkg: nullmailer
        state: present
        force_apt_get: true # apt-get instead of aptitude
        update_cache: true
      when:
        - pl_a_nullmailer_setup is defined
        - pl_a_nullmailer_setup | bool
    # --------------------------------------------------------------------------
    - name: "PRE | conf nullmailer"
      become: true
      ansible.builtin.copy:
        dest: /etc/nullmailer/remotes
        content: >-
          {{ mailing_smtp_host }} smtp --port={{ mailing_smtp_port }}
          {% if mailing_mail_username %}--auth-login --user={{ mailing_mail_username }} --pass={{ mailing_mail_password }}{% endif %}
          {% if mailing_remote_ssl %}--ssl{% endif %}
          {% if mailing_remote_starttls %}--starttls{% endif %}
        mode: "600"
      when:
        - pl_a_nullmailer_setup is defined
        - pl_a_nullmailer_setup | bool
    # --------------------------------------------------------------------------
    - name: "PRE | conf nullmailer"
      become: true
      ansible.builtin.copy:
        dest: /etc/mailname
        content: |
          {{ mailing_mail_email.split('@')[1] if mailing_mail_email is defined else mailing_mail_username }}
        mode: "640"
      when:
        - pl_a_nullmailer_setup is defined
        - pl_a_nullmailer_setup | bool
    - name: "PRE | conf nullmailer"
      become: true
      ansible.builtin.copy:
        dest: /etc/defaultdomain
        content: |
          {{ mailing_mail_email.split('@')[1] if mailing_mail_email is defined else mailing_mail_username }}
        mode: "640"
      when:
        - pl_a_nullmailer_setup is defined
        - pl_a_nullmailer_setup | bool
    # --------------------------------------------------------------------------
    - name: "PRE | conf nullmailer"
      become: true
      ansible.builtin.copy:
        dest: /etc/nullmailer/adminaddr
        content: |
          {{ mailing_mail_email if mailing_mail_email is defined else mailing_mail_username }}
        mode: "640"
      when:
        - pl_a_nullmailer_setup is defined
        - pl_a_nullmailer_setup | bool
    # --------------------------------------------------------------------------
    - name: "PRE | conf nullmailer"
      become: true
      ansible.builtin.copy:
        dest: /etc/nullmailer/allmailfrom
        content: |
          {{ mailing_mail_email if mailing_mail_email is defined else mailing_mail_username }}
        mode: "640"
      when:
        - pl_a_nullmailer_setup is defined
        - pl_a_nullmailer_setup | bool
