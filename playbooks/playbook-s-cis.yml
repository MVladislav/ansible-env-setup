---
# playbook CIS

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: CIS | install on clients
  remote_user: "{{ ansible_user }}"
  hosts:
    - clients
  become: true
  roles:
    - role: ansible-cis-ubuntu-2204
      cis_ubuntu2204_section1: true
      cis_ubuntu2204_section2: true
      cis_ubuntu2204_section3: true
      cis_ubuntu2204_section4: true
      cis_ubuntu2204_section5: true
      cis_ubuntu2204_section6: true
      # -------------------------
      cis_ubuntu2204_rule_1_4_1: false # bootloader password
      cis_ubuntu2204_set_boot_pass: false # bootloader password
      cis_ubuntu2204_rule_1_4_3: false # authentication required for single user mode
      # -------------------------
      cis_ubuntu2204_rule_5_4_2: false # lockout for failed password attempts # NOTE: will fail to use password
      # -------------------------
      cis_ubuntu2204_rule_1_6_1_3: true # AppArmor complain mode
      cis_ubuntu2204_rule_1_6_1_4: false # AppArmor enforce mode
      # -------------------------
      cis_ubuntu2204_allow_gdm_gui: true
      cis_ubuntu2204_allow_autofs: true
      cis_ubuntu2204_rule_1_1_10: false # Disable USB Storage
      cis_ubuntu2204_time_synchronization_service: chrony # chrony | systemd-timesyncd | ntp
      cis_ubuntu2204_time_synchronization_ntp_server: '{{ pl_a_host_default_ntp | default("time.cloudflare.com")}}'
      cis_ubuntu2204_time_synchronization_ntp_fallback_server: ntp.ubuntu.com
      cis_ubuntu2204_allow_cups: true
      # -------------------------
      cis_ubuntu2204_install_aide: "{{ pl_a_cis_setup_aide | default(false) | bool }}"
      cis_ubuntu2204_config_aide: "{{ pl_a_cis_setup_aide | default(false) | bool }}"
      cis_ubuntu2204_aide_cron:
        cron_user: root
        cron_file: aide
        aide_job: "/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check"
        aide_minute: 0
        aide_hour: 5
        aide_day: "*"
        aide_month: "*"
        aide_weekday: "*"
      # -------------------------
      cis_ubuntu2204_required_ipv6: "{{ pl_a_cis_ipv6_required | default(false) | bool }}"
      cis_ubuntu2204_firewall: ufw
      cis_ubuntu2204_firewall_ufw_outgoing_policy: allow
      # -------------------------
      cis_ubuntu2204_ssh_allow_groups: null
      cis_ubuntu2204_cron_allow_users:
        - root
      cis_ubuntu2204_at_allow_users:
        - root
      cis_ubuntu2204_pwquality:
        - key: "minlen"
          value: "8"
        - key: "dcredit"
          value: "-1"
        - key: "ucredit"
          value: "-1"
        - key: "ocredit"
          value: "-1"
        - key: "lcredit"
          value: "-1"
      # -------------------------
      when:
        - pl_a_cis_setup is defined
        - pl_a_cis_setup | bool
    ### -------------------------

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: CIS | install on servers
  remote_user: "{{ ansible_user }}"
  hosts:
    - servers
  become: true
  roles:
    - role: ansible-cis-ubuntu-2204
      cis_ubuntu2204_section1: true
      cis_ubuntu2204_section2: true
      cis_ubuntu2204_section3: true
      cis_ubuntu2204_section4: true
      cis_ubuntu2204_section5: true
      cis_ubuntu2204_section6: true
      # -------------------------
      cis_ubuntu2204_rule_1_4_1: false # bootloader password
      cis_ubuntu2204_set_boot_pass: false # bootloader password
      cis_ubuntu2204_rule_1_4_3: false # authentication required for single user mode
      # -------------------------
      cis_ubuntu2204_rule_5_4_2: false # lockout for failed password attempts # NOTE: will fail to use password
      # -------------------------
      cis_ubuntu2204_rule_1_6_1_3: true # AppArmor complain mode
      cis_ubuntu2204_rule_1_6_1_4: false # AppArmor enforce mode
      # -------------------------
      cis_ubuntu2204_allow_gdm_gui: false
      cis_ubuntu2204_allow_autofs: false
      cis_ubuntu2204_rule_1_1_10: true # Disable USB Storage
      cis_ubuntu2204_time_synchronization_service: chrony # chrony | systemd-timesyncd | ntp
      cis_ubuntu2204_time_synchronization_ntp_server: '{{ pl_a_host_default_ntp | default("time.cloudflare.com")}}'
      cis_ubuntu2204_time_synchronization_ntp_fallback_server: ntp.ubuntu.com
      cis_ubuntu2204_allow_cups: false
      # -------------------------
      cis_ubuntu2204_install_aide: "{{ pl_a_cis_setup_aide | default(false) | bool }}"
      cis_ubuntu2204_config_aide: "{{ pl_a_cis_setup_aide | default(false) | bool }}"
      cis_ubuntu2204_aide_cron:
        cron_user: root
        cron_file: aide
        aide_job: "/usr/bin/aide.wrapper --config /etc/aide/aide.conf --check"
        aide_minute: 0
        aide_hour: 5
        aide_day: "*"
        aide_month: "*"
        aide_weekday: "*"
      # -------------------------
      cis_ubuntu2204_required_ipv6: "{{ pl_a_cis_ipv6_required | default(false) | bool }}"
      cis_ubuntu2204_firewall: ufw
      cis_ubuntu2204_firewall_ufw_outgoing_policy: allow
      # -------------------------
      cis_ubuntu2204_ssh_allow_groups: null
      cis_ubuntu2204_cron_allow_users:
        - root
      cis_ubuntu2204_at_allow_users:
        - root
      cis_ubuntu2204_pwquality:
        - key: "minlen"
          value: "8"
        - key: "dcredit"
          value: "-1"
        - key: "ucredit"
          value: "-1"
        - key: "ocredit"
          value: "-1"
        - key: "lcredit"
          value: "-1"
      # -------------------------
      when:
        - pl_a_cis_setup is defined
        - pl_a_cis_setup | bool
    ### -------------------------

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: CIS | additional configs for client/server
  remote_user: "{{ ansible_user }}"
  hosts:
    - clients
    - servers
  become: true
  tasks:
    - name: CIS | set/update system variables for aide
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^(#)?{{ item.key }}=(\\s|$)"
        line: "{{ item.key }}={{ item.value }}"
      with_items:
        - key: CRON_DAILY_RUN
          value: "yes"
        - key: MAILTO
          value: "{{ mailing_mail_username | default('root') }}"
        - key: COPYNEWDB
          value: "yes"
        - key: TRUNCATEDETAILS
          value: "yes"
        - key: FILTERUPDATES
          value: "yes"
        - key: FILTERINSTALLATIONS
          value: "yes"
      when:
        - pl_a_cis_setup is defined
        - pl_a_cis_setup | bool
        - pl_a_cis_setup_aide is defined
        - pl_a_cis_setup_aide | bool
    - name: CIS | set/update aide variables for aide
      ansible.builtin.lineinfile:
        dest: "/etc/default/aide"
        state: present
        regexp: "^(#)?{{ item.key }}=(\\s|$)"
        line: "{{ item.key }}={{ item.value }}"
      with_items:
        - key: CRON_DAILY_RUN
          value: "yes"
        - key: MAILTO
          value: "{{ mailing_mail_username | default('root') }}"
        - key: COPYNEWDB
          value: "yes"
        - key: TRUNCATEDETAILS
          value: "yes"
        - key: FILTERUPDATES
          value: "yes"
        - key: FILTERINSTALLATIONS
          value: "yes"
      when:
        - pl_a_cis_setup is defined
        - pl_a_cis_setup | bool
        - pl_a_cis_setup_aide is defined
        - pl_a_cis_setup_aide | bool
    ### -------------------------
