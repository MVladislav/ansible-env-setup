---
# playbook client

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: cis installer
  ansible.builtin.import_playbook: playbook-s-cis.yml

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: pre installer
  ansible.builtin.import_playbook: playbook-s-pre-install.yml

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: server installer
  remote_user: "{{ ansible_user }}"
  hosts:
    - clients
  roles:
    ### -------------------------
    - role: ansible-install-server
      install_server_service_name: "{{ service_name }}"
      install_server_config:
        dev: true
        env_tun_setup: true
        # APT (1) -------------------------------
        apt_base: true
        apt_dev: true
        apt_build: true
        # apt_libs: false
        # APT (2) -------------------------------
        apt_vpn: true
        apt_go: true
        # apt_rasp_pi_pkg: false
        # apt_qemu_guest_agent: false
        # DPKG ----------------------------------
        # dpkg_...: false
        # SNAP ----------------------------------
        # snap_microk8s: false
        snap_btop: true
        # OTHER --------------------------------
        git: true
        zsh: true
        tmux: true
        python: true # base|dev
        # go_kompose: false
        # ruby: false
        # npm: false
        # mongodb: false
        # java: false # base|dev
    ### -------------------------
    - role: ansible-netplan
      netplan_service_name: "{{ service_name }}"
      when: netplan_setup is defined and netplan_setup | bool
    ### -------------------------

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: client installer
  remote_user: "{{ ansible_user }}"
  hosts:
    - clients
  roles:
    ### -------------------------
    - role: ansible-install-client
      install_client_service_name: "{{ service_name }}"
      install_client_config:
        # GENERAL -------------------------------
        dev: true
        fonts: true
        # GNOME ---------------------------------
        gnome_gui_setup: true
        # gnome_gui_setup_theme: false
        # gnome_gui_setup_dependencies: false
        gnome_gui_setup_extensions: true
        gnome_gui_setup_keybinding: true
        gnome_gui_setup_overlay: true
        # APT -----------------------------------
        apt_base: true
        # apt_base2: false
        apt_snap: true
        apt_flatpak: true
        # apt_peek: false
        apt_wireshark: true
        apt_wireshark_dev: true
        apt_vpn: true
        # apt_gnome_boxes: false
        # apt_latex: false
        # apt_pandoc: false
        # apt_virt_viewer: false
        # apt_lutris: false
        # DPKG ----------------------------------
        # dpkg_virtualbox: false
        # dpkg_mongodb: false
        # dpkg_veracrypt: false
        # DIST KEY ------------------------------
        # distribution_key_virtualbox: false
        # SNAP ----------------------------------
        # snap_chromium: false
        # snap_thunderbird: false
        # snap_libreoffice: false
        snap_onlyoffice_desktopeditors: true
        # snap_signal_desktop: false
        # snap_telegram_desktop: false
        # snap_zoom_client: false
        # snap_spotify: false
        # snap_inkscape: false
        # snap_drawio: false
        # snap_gimp: false
        # snap_darktable: false
        # snap_vlc: false
        # snap_obs_studio: false
        # snap_flameshot: false
        # snap_1password: false
        # snap_okular: false
        snap_code: true
        # snap_android_studio: false
        # snap_UBports: false
        # snap_insomnia: false
        # snap_postman: false
        # snap_dbeaver_ce: false
        # snap_beekeeper_studio: false
        # snap_microk8s: false
        # snap_rpi_imager: false
        # snap_multipass: false
        # snap_zaproxy: false
        # snap_cornyjokes: false
        # FLATPAK -------------------------------
        # flatpak_firefox: false
        # flatpak_chromium: false
        # flatpak_thunderbird: false
        # flatpak_flameshot: false
        # flatpak_onlyoffice: false
        # flatpak_1password: false
        # flatpak_keepassxc: false
        # flatpak_signal: false
        # flatpak_telegram: false
        # flatpak_threemaqt: false
        # flatpak_zoom: false
        # flatpak_teams: false
        # flatpak_discord: false
        # flatpak_spotify: false
        # flatpak_ferdi: false
        # flatpak_vlc: false
        # flatpak_inkscape: false
        # flatpak_drawio: false
        # flatpak_gimp: false
        # flatpak_studio: false
        # flatpak_blender: false
        # flatpak_code: false
        # flatpak_sublimetext: false
        # flatpak_arduinoide: false
        # flatpak_fritzing: false
        # flatpak_insomnia: false
        # flatpak_postman: false
        # flatpak_dbeavercommunity: false
        # flatpak_filezilla: false
        # flatpak_jdownloader: false
        # flatpak_wireshark: false
        # flatpak_ghidra: false
        # flatpak_zaproxy: false
        # flatpak_steam: false
        # flatpak_lutris: false
        # flatpak_ausweisapp2: false
        # flatpak_betaflightconfigurator: false
        # OTHER --------------------------------
        # vs_code_ext: false
        java: true
      # if you install java, by default as version is set 11, change below if you need
      # version is as input for openjdk java version
      install_client_java_version: 11
    ### -------------------------

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: docker installer
  ansible.builtin.import_playbook: playbook-s-docker.yml

# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: run hardening scan
  ansible.builtin.import_playbook: playbook-s-hardening.yml
